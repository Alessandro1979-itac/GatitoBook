{"ast":null,"code":"import { of, throwError } from 'rxjs';\nimport { catchError, mapTo } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../autenticacao/token.service\";\nconst API = environment.apiURL;\nconst NOT_MODIFIED = '304';\nexport class AnimaisService {\n  constructor(http, tokenService) {\n    this.http = http;\n    this.tokenService = tokenService;\n  }\n  listaDoUsuario(nomeDoUsuario) {\n    return this.http.get(`${API}/${nomeDoUsuario}/photos`);\n  }\n  buscaPorID(id) {\n    return this.http.get(`${API}/photos/${id}`);\n  }\n  excluiAnimal(id) {\n    return this.http.delete(`${API}/photos/${id}`);\n  }\n  curtir(id) {\n    return this.http.post(`${API}/photos/${id}/like`, {}, {\n      observe: 'response'\n    }).pipe(mapTo(true), catchError(error => {\n      return error.status === NOT_MODIFIED ? of(false) : throwError(error);\n    }));\n  }\n}\nAnimaisService.ɵfac = function AnimaisService_Factory(t) {\n  return new (t || AnimaisService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n};\nAnimaisService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AnimaisService,\n  factory: AnimaisService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}