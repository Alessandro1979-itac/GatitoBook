{"ast":null,"code":"import { first, map, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./novo-usuario.service\";\nexport class UsuarioExisteService {\n  constructor(novoUsuarioService) {\n    this.novoUsuarioService = novoUsuarioService;\n  }\n  usuarioJaExite() {\n    return control => {\n      return control.valueChanges.pipe(switchMap(nomeUsuario => this.novoUsuarioService.verificaUsuarioExistente(nomeUsuario)), map(usuarioExiste => usuarioExiste ? {\n        usuarioExistente: true\n      } : null), first());\n    };\n  }\n}\nUsuarioExisteService.ɵfac = function UsuarioExisteService_Factory(t) {\n  return new (t || UsuarioExisteService)(i0.ɵɵinject(i1.NovoUsuarioService));\n};\nUsuarioExisteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioExisteService,\n  factory: UsuarioExisteService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}